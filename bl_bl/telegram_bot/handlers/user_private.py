import logging
import os

from aiogram import Router, F, Bot
from aiogram.types import Message
from aiogram.filters import Command

from bl_bl.telegram_bot.common.neuro import slr_translator
from bl_bl.telegram_bot.database.engine import WorkWithDB
from bl_bl.telegram_bot.filters.chat_types import ChatTypeFilter

from process_video import process_video

user_private_router = Router()
user_private_router.message.filter(ChatTypeFilter(["private"]))

@user_private_router.message(Command("start"))
async def start_handler(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ –∂–µ—Å—Ç–æ–≤ –≤ —Ç–µ–∫—Å—Ç")

@user_private_router.message(Command("help"))
async def help_handler(message: Message):
    await message.answer("""
                         –î–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞–º –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤–∏–¥–µ–æ —É–¥–≤–æ–ª–µ—Ç–≤–æ—Ä—è—é—â–µ–µ —Å–ª–µ–¥—É—é—â–∏–º —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º:
                            1. –í–∏–¥–µ–æ –¥–æ–ª–∂–µ–Ω–æ –±—ã—Ç—å –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–º.
                            2. –ù–∞ –≤–∏–¥–µ–æ –¥–æ–ª–∂–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –æ–¥–∏–Ω —á–µ–ª–æ–≤–µ–∫ –Ω–∞ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–∏ 1-1.5 –º–µ—Ç—Ä–∞ –æ—Ç —ç–∫—Ä–∞–Ω–∞, —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω—ã–π –ø–æ —Å–µ—Ä–µ–¥–∏–Ω–µ –∏ —Å–º–æ—Ç—Ä—è—â–∏–π –≤ —ç–∫—Ä–∞–Ω.
                            3. –í—Å–µ –∂–µ—Å—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –æ—Ç—á–µ—Ç–ª–∏–≤–æ –≤–∏–¥–Ω—ã.
                         """)

@user_private_router.message(Command("info"))
async def info_handler(message: Message):
    await message.answer("–ë–æ—Ç –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ 100000 –∏–Ω–¥—É—Å–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –±—ã–ª–∏ –æ–±—É—á–µ–Ω—ã —Ä—É—Å—Å–∫–æ–º—É —Å—É—Ä–¥–æ–ø–µ—Ä–µ–≤–æ–¥—É.\n –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –ø–∏—Å–∞—Ç—å –Ω–∞ –ø–æ—á—Ç—É alex@karachun.com –∏ –º—ã –Ω–∞–∫–∞–∂–µ–º –∏–Ω–¥—É—Å–æ–≤ –ø–ª–æ—Ö–æ –≤—ã–ø–æ–ª–Ω—è—é—â–∏—Ö —Å–≤–æ—é —Ä–∞–±–æ—Ç—É!!!")

@user_private_router.message(Command("limits"))
async def info_handler(message: Message, client: WorkWithDB):
    await client.update_params(message.from_user.id)
    user = await client.get_user(message.from_user.id)
    if user:
        await message.answer(f"–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {user.duration_used} —Å–µ–∫. –∏–∑ {user.duration_max} —Å–µ–∫.\n–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ {user.requests_used} –∑–∞–ø—Ä–æ—Å–æ–≤ –∏–∑ {user.requests_max}.\n")

@user_private_router.message(F.video | F.video_note | F.animation)
async def video_handler(message: Message, bot: Bot, client: WorkWithDB):
    file_id = None
    duration = 0
    if message.video:
        file_id = message.video.file_id
        duration = message.video.duration
    elif message.video_note:
        file_id = message.video_note.file_id
        duration = message.video_note.duration
    elif message.animation:
        file_id = message.animation.file_id
        duration = message.animation.duration

    if not await client.orm_video_check(message.from_user.id, duration):
        await message.answer("–í–∞—à –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –∏—Å—á–µ—Ä–ø–∞–Ω üò¢")
    else:
        await client.orm_video_update(message.from_user.id, duration)

        file_info = await bot.get_file(file_id)
        file_path = file_info.file_path

        logging.info(f"Download file with path: {file_path}")
        
        await bot.download_file(file_path=file_path, destination=f"{file_id}.mp4")
        await message.reply(await process_video(f"{file_id}.mp4", 'Alex_Karachun/trained_models/s3d_1000_gestures_1000_videos_7_epochs_done/s3d_1000_gestures_1000_videos_5_epoch'))
        if os.path.exists(f"{file_id}.mp4"):
            os.remove(f"{file_id}.mp4")

@user_private_router.message()
async def other_handler(message: Message):
    await message.answer("–Ø —É–º–µ—é —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –≤–∏–¥–µ–æ. –ü—Ä–∏—à–ª–∏—Ç–µ –≤–∏–¥–µ–æ –∏ —Ç–æ–≥–¥–∞ —è —Å–º–æ–≥—É –µ–≥–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ ü§ó")
        




